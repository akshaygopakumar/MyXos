load(7,1);//load the exception handler
load(8,2);
load(23,17);//load interrupt 7 into the memory
load(24,18);

[READY_LIST + 0] = 0; //The process id is set to 0
load(25,21);  //load the init into memory
load(26,22); 
load(27,23);  
PTBR = 1024; //Page Table is set for address translation
PTLR = 4; 
[PTBR + 0 ] = 25 ;
[PTBR + 1 ] = "01" ;
[PTBR + 2 ] = 26 ;
[PTBR + 3 ] = "01" ;
[PTBR + 4 ] = 27 ;
[PTBR + 5 ] = "01" ;
[PTBR + 6 ] = 28 ;
[PTBR + 7 ] = "01" ;
[READY_LIST + 1] = 2; //set the status of the process as running 
SP = 3 * 512; //set the logical address of stack pointer to 3
[28 * 512] = 0; //IP set to 0
load(11,5); //interrupt 1
load(12,6);
load(13,7); //interrupt 2
load(14,8)
load(15,9); //interrupt 3
load(16,10);
load(17,11); //interrupt 4
load(18,12);
load (9, 3); 	//timer interrupt
load (10, 4);	//
load (5,19);	//FAT
load (6,20);	//Disk Free list
alias counter S0;			
counter = 0;
while ( counter <  128) do			// 64 entries, each of size 2 words
	[ FILE_TABLE + counter + 0] = -1;	// Set FAT Index to -1
	[ FILE_TABLE + counter + 1] =  0;	// Set File Open Count to 0
	counter = counter + 2;			// Move to next entry
endwhile;	
counter=0;
while ( counter < 16 ) do
	[READY_LIST + counter + 15] = -1; // Set Process File Table entry as 1
	counter = counter + 1; //Move to next entry
endwhile;

ireturn;
